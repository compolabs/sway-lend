/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.27.0
  Forc version: 0.32.2
  Fuel-Core version: 0.15.1
*/

import { Interface, Contract } from "fuels";
import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import type { OracleAbi, OracleAbiInterface } from "../OracleAbi";

const _abi = {
  types: [
    {
      typeId: 0,
      type: "()",
      components: [],
      typeParameters: null,
    },
    {
      typeId: 1,
      type: "b256",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 2,
      type: "enum Identity",
      components: [
        {
          name: "Address",
          type: 5,
          typeArguments: null,
        },
        {
          name: "ContractId",
          type: 6,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 3,
      type: "str[13]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 4,
      type: "str[19]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 5,
      type: "struct Address",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 6,
      type: "struct ContractId",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 7,
      type: "struct Price",
      components: [
        {
          name: "asset_id",
          type: 6,
          typeArguments: null,
        },
        {
          name: "price",
          type: 8,
          typeArguments: null,
        },
        {
          name: "last_update",
          type: 8,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 8,
      type: "u64",
      components: null,
      typeParameters: null,
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: "asset_id",
          type: 6,
          typeArguments: null,
        },
      ],
      name: "get_price",
      output: {
        name: "",
        type: 7,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "owner",
          type: 5,
          typeArguments: null,
        },
      ],
      name: "initialize",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
    },
    {
      inputs: [],
      name: "owner",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "asset_id",
          type: 6,
          typeArguments: null,
        },
        {
          name: "price",
          type: 8,
          typeArguments: null,
        },
      ],
      name: "set_price",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
    },
  ],
  loggedTypes: [
    {
      logId: 0,
      loggedType: {
        name: "",
        type: 4,
        typeArguments: null,
      },
    },
    {
      logId: 1,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: null,
      },
    },
  ],
  messagesTypes: [],
};

export class OracleAbi__factory {
  static readonly abi = _abi;
  static createInterface(): OracleAbiInterface {
    return new Interface(_abi) as unknown as OracleAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): OracleAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as OracleAbi;
  }
}
